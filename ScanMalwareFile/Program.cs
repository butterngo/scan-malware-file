namespace ScanMalwareFile
{
    using Infrastructure.Extensions;
    using System;

    class Program
    {
        static string ClamavHost = "";

        static int ClamavPort = 3310;

        static string AzureHost = "";

        static void Main(string[] args)
        {
            string pathFile = $@"D:\dev\nClam\files\MyCV.docx";
            //string pathFile = $@"D:\dev\nClam\files\eicar.com";

            Clamav(pathFile);

            Console.WriteLine("****************************************");

            Window10AntiMalware(pathFile);

            Console.WriteLine("****************************************");

            //AzureWindowServer2016AntiMalware(pathFile);

            Console.ReadKey();
        }

        static void Window10AntiMalware(string pathFile)
        {
            Console.WriteLine("Start scan file with Window10AntiMalware");

            var clamav = new AzureAntiMalware.ServerScanFileService();

            var result = clamav.ScanFileAsync(pathFile.ToBytes()).Result;

            Console.WriteLine($"Has virus: {result.HasVirus}");

            Console.WriteLine($"VirusName: {result.VirusName}");

            Console.WriteLine($"Message: {result.Message}");

            Console.WriteLine("End scan file with Window10AntiMalware");
        }

        static void AzureWindowServer2016AntiMalware(string pathFile)
        {
            Console.WriteLine("Start scan file with AzureWindowServer2016AntiMalware");

            var clamav = new AzureAntiMalware.ClientScanFileService(AzureHost);

            var result = clamav.ScanFileAsync(pathFile.ToBytes()).Result;

            Console.WriteLine($"Has virus: {result.HasVirus}");

            Console.WriteLine($"VirusName: {result.VirusName}");

            Console.WriteLine($"Message: {result.Message}");

            Console.WriteLine("End scan file with AzureWindowServer2016AntiMalware");
        }

        static void Clamav(string pathFile)
        {
            Console.WriteLine("Start scan file with Clamav");

            var clamav = new CLAMAV.ScanFileService(ClamavHost, ClamavPort);

            var result = clamav.ScanFileAsync(pathFile).Result;

            Console.WriteLine($"Has virus: {result.HasVirus}");

            Console.WriteLine($"VirusName: {result.VirusName}");

            Console.WriteLine($"Message: {result.Message}");

            Console.WriteLine("End scan file with Clamav");
        }
    }
}
