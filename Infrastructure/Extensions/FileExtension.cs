namespace Infrastructure.Extensions
{
    using System;
    using System.IO;

    public static class FileExtension
    {
        public static byte[] ToBytes(this string pathFile)
        {
            if (!File.Exists(pathFile)) throw new Exception($"Not found ${pathFile}");

            FileStream fs = new FileStream(pathFile, FileMode.Open, FileAccess.Read);

            byte[] bytes = new byte[fs.Length];

            fs.Read(bytes, 0, Convert.ToInt32(fs.Length));

            fs.Close();

            return bytes; 
        }

        public static byte[] ToBytes(this Stream stream)
        {
            byte[] buffer = new byte[stream.Length];

            using (MemoryStream ms = new MemoryStream())
            {
                int read;
                while ((read = stream.Read(buffer, 0, buffer.Length)) > 0)
                {
                    ms.Write(buffer, 0, read);
                }
                return ms.ToArray();
            }
        }

        public static Stream ToStream(this byte[] bytes)
        {
            return new MemoryStream(bytes);
        }
    }
}
